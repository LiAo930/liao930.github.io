(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{233:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"css继承"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css继承"}},[t._v("#")]),t._v(" "),a("code",[t._v("CSS")]),t._v("继承")]),t._v(" "),a("p",[t._v("继承就是指子节点默认使用父节点的样式属性。 不可继承的属性太多了不要背，记住可以继承的属性有哪些就行了。")]),t._v(" "),a("p",[t._v("可以继承的属性很少，只有颜色，文字，字体间距行高对齐方式，和列表的样式可以继承。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所有元素可继承：visibility和cursor；")])]),t._v(" "),a("li",[a("p",[t._v("内联元素可继承：letter-spacing、word-spacing、white-space、line-height、color、font、font-family、font-size、font-style、font-variant、font-weight、text-decoration、text-transform、direction；")])]),t._v(" "),a("li",[a("p",[t._v("块状元素可继承：text-indent和text-align；")])]),t._v(" "),a("li",[a("p",[t._v("列表元素可继承：list-style、list-style-type、list-style-position、list-style-image。")])])]),t._v(" "),a("h3",{attrs:{id:"阻止ie和各大浏览器默认行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阻止ie和各大浏览器默认行为"}},[t._v("#")]),t._v(" 阻止IE和各大浏览器默认行为")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("阻止默认事件：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preventDefault")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("returnValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("阻止冒泡：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stopPropagation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ne"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cancelBubble "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),a("h3",{attrs:{id:"commonjs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs"}},[t._v("#")]),t._v(" "),a("code",[t._v("CommonJS")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("浏览器不兼容CommonJS的根本原因，在于缺少四个Node.js环境的变量。\nmodule\nexports\nrequire\nglobal\n")])])]),a("h3",{attrs:{id:"foreach循环中止问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreach循环中止问题"}},[t._v("#")]),t._v(" "),a("code",[t._v("forEach")]),t._v("循环中止问题")]),t._v(" "),a("p",[a("code",[t._v("arr.forEach")]),t._v("不可中止，但可以使用"),a("code",[t._v("arr.some")]),t._v("和"),a("code",[t._v("arr.every")]),t._v("来代替。当使用"),a("code",[t._v("return true")]),t._v("可以跳出"),a("strong",[t._v("some")]),t._v("循环，"),a("code",[t._v("return false")]),t._v("可以跳出"),a("strong",[t._v("every")]),t._v("循环")]),t._v(" "),a("h3",{attrs:{id:"钥匙和门锁问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#钥匙和门锁问题"}},[t._v("#")]),t._v(" 钥匙和门锁问题")]),t._v(" "),a("div",{staticClass:"language-markdown extra-class"},[a("pre",{pre:!0,attrs:{class:"language-markdown"}},[a("code",[t._v("有 N 个房间，开始时你位于 0 号房间。每个房间有不同的号码：0，1，2，...，N-1，并且房间里可能有一些钥匙能使你进入下一个房间。\n\n在形式上，对于每个房间 i 都有一个钥匙列表 rooms[i]，每个钥匙 rooms"),a("span",{pre:!0,attrs:{class:"token url"}},[t._v("["),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("i")]),t._v("]["),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("j")]),t._v("]")]),t._v(" 由 [0,1，...，N-1] 中的一个整数表示，其中 N = rooms.length。 钥匙 rooms"),a("span",{pre:!0,attrs:{class:"token url"}},[t._v("["),a("span",{pre:!0,attrs:{class:"token content"}},[t._v("i")]),t._v("]["),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("j")]),t._v("]")]),t._v(" = v 可以打开编号为 v 的房间。\n\n最初，除 0 号房间外的其余所有房间都被锁住。\n\n你可以自由地在房间之间来回走动。\n\n如果能进入每个房间返回 true，否则返回 false。\n\n示例 1：\n\n输入: [[1],[2],[3],[]]\n输出: true\n解释:  \n我们从 0 号房间开始，拿到钥匙 1。\n之后我们去 1 号房间，拿到钥匙 2。\n然后我们去 2 号房间，拿到钥匙 3。\n最后我们去了 3 号房间。\n由于我们能够进入每个房间，我们返回 true。\n示例 2：\n\n输入：[[1,3],[3,0,1],[2],[0]]\n输出：false\n解释：我们不能进入 2 号房间。\n提示：\n\n1 <= rooms.length <= 1000\n0 <= rooms[i].length <= 1000\n所有房间中的钥匙数量总计不超过 3000。\n\n")])])]),a("p",[t._v("解法思路：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * @param {number[][]} rooms\n * @return {boolean}\n */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("canVisitAllRooms")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("rooms")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rooms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//n个房间")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" visited "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//记录是否可进入")]),t._v("\n    \n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//DFS")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// const dfs = (key) => {")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     if(visited[key]) return;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     visited[key] = true;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     for(let i = 0;i<rooms[key].length;i++){")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         dfs(rooms[key][i]);")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dfs(0);")]),t._v("\n    \n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//BFS")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// visited[0] = true; //记录是否访问过")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let queue = rooms[0]; //队列")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// while(queue.length > 0){")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     let cur = queue.shift(); //当前钥匙")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     if(!visited[cur]){")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         visited[cur] = true;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//         queue.push(...rooms[cur]);")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     }")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" visited"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("every")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("v")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" v "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);