(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{210:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"dom1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom1"}},[t._v("#")]),t._v(" DOM1")]),t._v(" "),a("h3",{attrs:{id:"节点层级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点层级"}},[t._v("#")]),t._v(" 节点层级")]),t._v(" "),a("p",[t._v("​\t对DOM来说，任何文档都可以是多层、多节点构成的树状结构。结构里的节点能分为多种类型，每种类型的节点都携带着不同的信息和标记。")]),t._v(" "),a("h3",{attrs:{id:"节点属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点属性"}},[t._v("#")]),t._v(" 节点属性")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("nodeType")])]),t._v(" "),a("p",[t._v("​\t所有的DOM节点都具有一个名为"),a("strong",[t._v("nodeType")]),t._v("的属性，不同数字和常量名称对应不同的节点类型，其中数字表示是兼容于所有浏览器的，常量会在IE8报错。类型共有12种，分别是：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("元素节点            　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ELEMENT_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n属性节点            　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ATTRIBUTE_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文本节点            　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TEXT_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDATA")]),t._v("节点             Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CDATA_SECTION_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n实体引用名称节点    　　 Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENTRY_REFERENCE_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n实体名称节点        　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ENTITY_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n处理指令节点        　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PROCESSING_INSTRUCTION_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n注释节点            　 Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COMMENT_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档节点            　 Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCUMENT_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档类型节点        　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCUMENT_TYPE_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n文档片段节点        　　Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DOCUMENT_FRAGMENT_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DTD")]),t._v("声明节点            Node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOTATION_NODE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("nodeName")])]),t._v(" "),a("p",[t._v("DOM节点的另一属性，始终保存着节点元素的标签名。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("childNodes")])]),t._v(" "),a("p",[t._v("​\t每一个节点都具有一个名为"),a("strong",[t._v("childNodes")]),t._v("的属性，该属性的值是一个"),a("strong",[t._v("该节点下所有的子节点构成的NodeList类数组")]),t._v("，而且和"),a("strong",[t._v("getElement系列方法")]),t._v("一样是动态更新的。")]),t._v(" "),a("p",[t._v("​\t值得一提的是，虽然该属性和children属性同样是获取当前节点下的子节点，但childNodes会获取所有节点（）不论类型，而children只获取"),a("strong",[t._v("元素节点")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parentNode")])]),t._v(" "),a("p",[t._v("​\t指向文档树中，当前节点的父级节点。")]),t._v(" "),a("p",[t._v("​\t而对于当前节点的父节点来说，childNodes中的都是当前节点的兄弟节点，通过访问当前节点的"),a("strong",[t._v("previousSibling")]),t._v("和"),a("strong",[t._v("nextSibling")]),t._v("属性可以获得该节点的相邻兄弟节点（"),a("strong",[t._v("获取的不一定是元素节点")]),t._v("）。")]),t._v(" "),a("p",[t._v("​\t父节点的"),a("strong",[t._v("firstChild")]),t._v("和"),a("strong",[t._v("lastChild")]),t._v("分别指向父级节点的childNodes种的第一个节点和最后一个节点（"),a("strong",[t._v("这里获取的不一定是元素节点")]),t._v("，如果需要元素节点，应使用"),a("strong",[t._v("firstElementChild和lastElementChild")]),t._v("）")])])]),t._v(" "),a("h4",{attrs:{id:"节点操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#节点操作"}},[t._v("#")]),t._v(" 节点操作")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("parentNode.appendChild(newNode) / append(newNode | DOMString)")])]),t._v(" "),a("ol",[a("li",[t._v("若新添加的节点并不存在于父节点的"),a("strong",[t._v("childNodes")]),t._v("，则添加到"),a("strong",[t._v("childNodes")]),t._v("的尾部，且自动更新"),a("strong",[t._v("lastChild")]),t._v("；")]),t._v(" "),a("li",[t._v("如果新添加的节点就是原文档的一部分，那么最终得到的结果就相当于"),a("strong",[t._v("移位")]),t._v("，即把已存在的节点移动到"),a("strong",[t._v("childNodes")]),t._v("最末尾的位置；")]),t._v(" "),a("li",[t._v("两者的区别在于appendChild只能传入一个节点，返回值为传入的节点；而append可以同时传入多个，但无返回值。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("insertBefore(newNode,target)")])]),t._v(" "),a("p",[t._v("第一个参数为添加的新节点，第二个参数为目标节点。新节点会出现在目标节点之前，同时目标节点previousSibling更新为newNode")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parentNode.replaceChild(newNode，oldNode)")])]),t._v(" "),a("p",[t._v("第一个参数为要替换进DOM树的新节点，第二个参数为被替换的节点")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("parentNode.removeChild(deleteNode)")])]),t._v(" "),a("p",[t._v("只接收一个参数，为要删除的节点")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("someNode.cloneNode(boolean)")])]),t._v(" "),a("p",[t._v("复制节点并返回节点副本，参数为布尔值，决定是否深复制。")]),t._v(" "),a("p",[t._v("但返回的副本并不归于文档流，因此需要appendChild，replaceChild或insertBefore来把节点添加到文档中中。")])])]),t._v(" "),a("h3",{attrs:{id:"document类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#document类型"}},[t._v("#")]),t._v(" Document类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("浏览器中，document对象是HTMLDocument类型（继承自Document类型）的一个实例，表示整个HTML页面，其childNodes属性种只有html元素。document对象也是window对象的一个属性；")])]),t._v(" "),a("li",[a("p",[t._v("文档子节点访问：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("documentElement 或 document的childNodes属性 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("》指向html\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("body  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("》指向body\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v("》指向head下的title标签\n")])])])]),t._v(" "),a("li",[a("p",[t._v("元素查找")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("getElementById：\n\t根据元素attributes中的id特性查找并返回单个元素。查找顺序为前往后，最终返回最早出现的元素；\ngetElementsByTagNmae：\n\t根据标签名返回一个包含所有指定标签的HTMLCollection，可以使用方括号或者item(index)访问单独的项。HTMLCollection也支持通过name属性来访问具体的项，但不可遍历具体方法是方括号和namedItem();\n\t方法也可传入'*'，返回所有类型的标签\ngetElementsByName：\n\t返回所有name属性为传入参数的标签的HTMLCollection\n")])])])]),t._v(" "),a("li",[a("p",[t._v("文档写入")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("document有把输出流写入到文档的能力，其方式为：\n.write(str)/writeln(str)：把字符串写入网页，后者会自动在末尾增加换行符\n")])])])]),t._v(" "),a("li",[a("p",[t._v("创建元素")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("document.createElement(nodeName)：创建并返回一个不包含于DOM树的元素节点，参数只能为标签名；\n\t\t\t\t\t\t\t\t\t唯一的例外是IE，允许传入一整个完整的节点型字符串\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"element类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#element类型"}},[t._v("#")]),t._v(" Element类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Element类型用于表现XML和HTML元素，提供了对元素标签名（tagName属性），子节点和特性（attributes）的访问，可以认为是大部分的标签；")])]),t._v(" "),a("li",[a("p",[t._v("任何HTMLElement都具有id，className（作为属性名时是className，作为特性访问时是class），title，lang（元素内容的语言代码），dir（语言的方向，值为ltr和rtl）这五个特性，且可以直接通过点方法获取；")])]),t._v(" "),a("li",[a("p",[t._v("特性操作（attributes）")]),t._v(" "),a("p",[a("code",[t._v("someNode.setAttribute(attrName,value)/getAttribute(attrname)/removeAttribute(attrName)")])]),t._v(" "),a("p",[t._v("除了五个固有特性可以通过访问节点的属性获取之外，自定义的特性只能通过getAttrbutes方法访问得到；")]),t._v(" "),a("p",[a("strong",[t._v("两类特殊特性：style和onclick这样的事件处理程序。")])]),t._v(" "),a("p",[a("strong",[t._v("style如果直接通过属性访问，最终得到的就是一个对象；通过getAttribute方法则会得到一个CSS文本；")])]),t._v(" "),a("p",[a("strong",[t._v("onclick也是相同，返回的是代码的字符串。")])]),t._v(" "),a("p",[t._v("自定义属性只能通过setAttribute方法设置，其属性名会"),a("strong",[t._v("自动转为小写")]),t._v("。点方法设置的属性都是无效值（oDiv.myAttr = val  == 》 无效表达）")])]),t._v(" "),a("li",[a("p",[t._v("attributes属性")]),t._v(" "),a("p",[t._v("Element类型的DOM节点都具有一个名为"),a("strong",[t._v("attributes")]),t._v("，值类型为"),a("strong",[t._v("NamedNodeMap")]),t._v("的属性。NamedNodeMap类似于NodeList，里面保存着所有的特性（attribute），且每一个元素都具有nodeName和nodeValue这两个属性；")])])]),t._v(" "),a("h3",{attrs:{id:"文本节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文本节点"}},[t._v("#")]),t._v(" 文本节点")]),t._v(" "),a("ul",[a("li",[t._v("nodeName：#text，nodeValue：文本值，不存在子节点，父节点是Element")]),t._v(" "),a("li",[t._v("创建文本节点：document.createTextNode(text)，需要认为插入文档流")]),t._v(" "),a("li",[t._v("当在元素节点中插入两个文本节点时，文档流很可能出现混乱。可以用"),a("strong",[t._v("normalize()"),a("strong",[t._v("方法，合并相邻的文本节点（elementNode.normalize() ==》合并")]),t._v("elementNode")]),t._v("中所有的文本节点）")]),t._v(" "),a("li",[t._v("和normalize方法相反，还存在分割文本节点的"),a("code",[t._v("textNode.splitText(posi)")]),t._v("方法。以现有文本节点从开始的位置到指定位置为一个文本节点，剩下的内容为第二个文本节点。")])]),t._v(" "),a("h3",{attrs:{id:"documentfragment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#documentfragment"}},[t._v("#")]),t._v(" DocumentFragment")]),t._v(" "),a("ul",[a("li",[t._v("轻量级的文档元素，可以包含和控制节点，但不占用额外资源；")]),t._v(" "),a("li",[t._v("document.createDocumentFragment()方法可以创建一个fragment，支持所有的element方法")])]),t._v(" "),a("h3",{attrs:{id:"dom操作技术"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom操作技术"}},[t._v("#")]),t._v(" DOM操作技术")]),t._v(" "),a("ul",[a("li",[t._v("动态脚本（页面加载时不存在，未来某一时刻需要）\n"),a("ol",[a("li",[t._v("动态创建script标签，然后设置url，插入到body元素中。但这种方法无法判断何时加载完毕；")]),t._v(" "),a("li",[t._v("另一种方式是在创建script标签后，通过script标签的text属性，人为给script标签中增加脚本内容（插入有"),a("strong",[t._v("两种情况")]),t._v("：对于非IE浏览器，直接在script标签中插入文本节点即可，IE必须通过text属性，传入一个字符串）")])])]),t._v(" "),a("li",[t._v("动态样式（同上）\n"),a("ol",[a("li",[t._v("动态创建link标签，手动设置type，rel，href属性值，最后插入到head标签；")]),t._v(" "),a("li",[t._v("手动创建style标签，设置type属性，人为增添内容（IE需要调用style.styleSheet.cssText属性，传入一个CSS格式的字符串；非IE则传入一个文本节点，内容为CSS格式的字符串）")])])])]),t._v(" "),a("h3",{attrs:{id:"nodelist、htmlcollection和namednodemap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodelist、htmlcollection和namednodemap"}},[t._v("#")]),t._v(" NodeList、HTMLCollection和NamedNodeMap")]),t._v(" "),a("ul",[a("li",[t._v("本质都是文档查询结果的动态集合，文档树结构的变化会实时反应到集合里；")]),t._v(" "),a("li",[t._v("都具有iterator接口，因此可以for..of遍历（HTMLCollection不支持forEach）")])]),t._v(" "),a("h2",{attrs:{id:"dom扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom扩展"}},[t._v("#")]),t._v(" DOM扩展")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("document/element.querySelector(CSS-Selector)/querySelectorAll(CSS-Selector)")])]),t._v(" "),a("p",[t._v("静态方法，返回的结果不会因为文档结构而变化。前者返回第一个匹配css选择器的节点，后者返回所有匹配css选择器的NodeList；")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("element.matchesSelector(CSS-Selector)")])]),t._v(" "),a("p",[t._v("检测元素是否匹配css选择器，返回一个布尔值。但存在兼容性问题，各浏览器支持方式不同，需要注意；")])]),t._v(" "),a("li",[a("p",[t._v("HTML5新增加的DOM相关API：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("：可以传入多个类名，以空格分隔。返回结果是一个NodeList；\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("classList属性：所有的节点都具有该属性，可以针对节点单独的类名进行操作（add、remove、contains、toggle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，分别代表增、删、判断包含、存在则删除，不存在则增加，参数为类名）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("焦点管理")]),t._v(" "),a("ul",[a("li",[t._v("传统的焦点方式有页面加载，用户输入，js的focus()方法。document对象下的activeElement属性始终指向DOM中获得了焦点的对象；")]),t._v(" "),a("li",[t._v("默认情况下，文档加载完成后document.activeElement指向document.body。文档加载期间activeElement的值为null；")]),t._v(" "),a("li",[t._v("document.hasFocus()：确定document是否获得焦点。")])])]),t._v(" "),a("li",[a("p",[t._v("自定义数据属性")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HTML5允许给元素节点增添非标准的属性，用于提供与渲染无关的信息。这些属性都以“"),a("strong",[t._v("data-")]),t._v("”为前缀：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("btn active"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("myattr")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("myattr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-first")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("data-second")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("second"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("这种的自定义属性都会保存在节点的"),a("strong",[t._v("dataset")]),t._v("属性中，以"),a("strong",[t._v("DOMStringMap")]),t._v("的形式统一保存，通过点方法和“[keyName]”即可访问里面的键值对；同时自定义属性也可以在"),a("strong",[t._v("attributes")]),t._v("属性中获取，通过"),a("strong",[t._v("set/getAttribute")]),t._v("方法操做。")])])])]),t._v(" "),a("li",[a("p",[t._v("innerHTML / outerHTML")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("innerHTML")]),t._v(" "),a("p",[t._v("节点的"),a("strong",[t._v("innerHTML")]),t._v("属性反映节点的子节点树结构，也可操作这个属性替换子节点树结构。")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v("，有一些标签是innerHTML设置无效的，如：col，colgroup，head，frameset，html，style，table，tbody，thead，tfoot，tr。")])]),t._v(" "),a("li",[a("p",[t._v("outerHTML")]),t._v(" "),a("p",[t._v("读：返回包括调用节点在内的整个子节点树；写：用html字符串替换整个调用节点；")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" op "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementsByTagname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outerHTML"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '<p>old p</p>'")]),t._v("\nou"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outerHTML "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<div>new p</div>'")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"<div>new div</div>"')]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("element.insertAdjacentHTML(posi,HTMLText)")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("posi（String）:\n\tbeforebegin：在element之前增添一个同辈元素；\n\tafetrbegin：在element下增添一个新元素或在element的第一个子元素之前增添一个新元素；\n\tbeforeend：在element下增添一个新元素或在element的最后一个子元素之后增添一个新元素；\n\tafterend：在element之后增添一个同辈元素；\nHTMLText：html字符串\n")])])])]),t._v(" "),a("li",[a("p",[t._v("innerText / outerText")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("innerText")]),t._v(" "),a("p",[t._v("该属性会返回当前节点中包含的所有文本，"),a("strong",[t._v("读操作")]),t._v("的顺序是从上到下，由外至内；"),a("strong",[t._v("写操作")]),t._v("会删除所有的子节点，再把传入的内容转为文本节点插入")])]),t._v(" "),a("li",[a("p",[t._v("outerText")]),t._v(" "),a("p",[t._v("作用范围扩展至调用节点本身。"),a("strong",[t._v("读操作")]),t._v("得到的结果"),a("strong",[t._v("与innerText并无区别")]),t._v("，"),a("strong",[t._v("写操作")]),t._v("会直接"),a("strong",[t._v("把整个节点及子节点树删除")]),t._v("，然后插入文本节点")])])])])]),t._v(" "),a("h2",{attrs:{id:"dom2、dom3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom2、dom3"}},[t._v("#")]),t._v(" DOM2、DOM3")]),t._v(" "),a("p",[t._v("​\tDOM1的核心是DOMCore和DOMHTML。前者是规定如何基于XML映射文档，后者在前者的基础上增加控制文档中节点的访问API和属性；")]),t._v(" "),a("p",[t._v("​\t如果说DOM1是对HTML和XML的底层结构定义，DOM2和DOM3则是在其基础上引入了更多的交互能力。DOM2除了增强本来就有的Core和HTML两个模块，还新增加了"),a("strong",[t._v("Views")]),t._v("（定义基于样式信息的不同视图），"),a("strong",[t._v("Events")]),t._v("（用事件与文档交互），"),a("strong",[t._v("Style")]),t._v("（以编程的方式访问和改变css样式）和"),a("strong",[t._v("T&R")]),t._v("（遍历和范围，引入了遍历文档和选择特定部分的新接口）四个模块。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("命名空间")]),t._v(" "),a("p",[t._v("​\t命名空间是XML和XHTML中涉及的概念，相当于为元素定义所属的集合，这样就不会因为重名而发生冲突。")]),t._v(" "),a("p",[t._v("​\t相对于DOM1，DOM2给节点（document、element）增加了几个有关命名空间的属性（localName不带前缀的节点名称，namespaceURI命名空间的URI，prefix命名空间前缀）以及相关的访问方法，DOM3更增加了有关命名空间的新方法")])]),t._v(" "),a("li",[a("p",[t._v("新的DOM变化（与命名空间无关）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DocumentType")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("新增publicId，systemId和internalSubset三个属性，都挂在document.doctype下\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Document")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("DOM2为document添加了一个名为defaultView的新属性，指向当前文档的的窗口（window对象）\ndocument.implementation.createDocumentType / createDocument：创建DocType节点/XML文档\n\t\t\t\t\t\t.createHTMLDocument(titleString)：创建一个完整的html结构\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Node")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("节点比较方法：\n\tsomeNode.isSameNode(node)/isEqualNode(node)：比较someNode与node是否相同/相等。相同指的是两个节点引用的使用一个对象，相等指两个节点的nodeName，nodeValue，childNodes和attributes相同\n")])])])]),t._v(" "),a("li",[a("p",[t._v("框架（ifame）")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("框架（HTMLFrameElement）和内嵌框架（HTMLIFrameElement）在DOM2都增加了一个新的属性contentDocument，该属性指向框架的document对象\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("样式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("document.implementation.hasFeature(feature,version)：DOM的实现是否支持某项功能")])]),t._v(" "),a("li",[a("p",[t._v("访问元素样式")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("任何支持style特性的HTML元素在js中都有一个对应的style属性，值是一个CSSStyleDeclaration（"),a("strong",[t._v("具有iterator属性")]),t._v("）实例，里面包括所有以style特性（即"),a("strong",[t._v("行内样式")]),t._v("）指定的元素样式；")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("DOM2中")]),t._v("，style对象有了新的方法和属性：")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cssText：style特性（行内样式）中的css代码，重写会全覆盖\nlength：style特性中的css属性数量\ngetPropertyValue（propName）：根据属性名获取属性值\nremoveProperty（propName）：删除css属性\nitem（index）：根据序号获得对应的style特性\nsetProperty（propName，value，priority）：第三个参数值为import或空格，代表给css属性设置!important\n")])])]),a("ul",[a("li",[a("p",[t._v("计算样式")]),t._v(" "),a("p",[t._v("style对象可以给出当前元素的css信息，但却无法反应收到层叠样式影响后，当前元素的样式信息。")]),t._v(" "),a("p",[a("strong",[t._v("getComputedStyle(node,isFakeNode)")]),t._v("：返回计算层叠之后的元素样式信息（border除外）；")]),t._v(" "),a("p",[t._v("IE中提供了一个名为currentStyle的属性，可以返回带有相同信息的"),a("strong",[t._v("CSSStyleDeclaration")]),t._v("对象（border除外）。")])])])]),t._v(" "),a("li",[a("p",[t._v("操作样式表")]),t._v(" "),a("ul",[a("li",[t._v("document对象同样具有一个"),a("strong",[t._v("styleSheets")]),t._v("属性，值为一个StyleSheetList实例，里面包含页面中所有的style标签的对应js的"),a("strong",[t._v("CSSStyleSheet")]),t._v("实例和所有"),a("strong",[t._v("rel")]),t._v("为"),a("strong",[t._v("stylesheet")]),t._v("的link标签对应的"),a("strong",[t._v("CSSStyleSheet")]),t._v("实例；")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('CSSStyleSheet实例：\n\townerRule: null\n\tcssRules: 样式表中所有的css规则\n\trules: 同上，为防止IE不支持cssRules\n\ttype: "text/css"\n\thref: 指向样式表引入路径（不是引入则为null）\n\townerNode: 指向样式表对映的节点\n\tparentStyleSheet: null\n\ttitle: ownerNode中title的值\n\tmedia: MediaList {mediaText: "", length: 0}\n\tdisabled: 布尔值，是否禁用样式表\n')])])]),a("ul",[a("li",[a("p",[t._v("style和link对应的"),a("strong",[t._v("js对象")]),t._v("具有"),a("strong",[t._v("sheet")]),t._v("属性，值为对应的"),a("strong",[t._v("CSSStyleSheet")]),t._v("实例；")])]),t._v(" "),a("li",[a("p",[t._v("创建，插入，删除CSS规则")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("CSSStyleSheet对象具有insertRule(rule,index)和deleteRule(index)方法，用于往对象的cssRules中增/删css规则。\n前者插入的样式字符串会顶替原有规则位置，同时cssRules长度加一，后者根据位置删除规则\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("元素的大小")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("偏移量（offset）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("offsetHeight：元素在垂直方向上占用空间的大小，单位为px，包括元素的高度（height+上下padding）+元素上下border宽度+水平滚动条高度\noffsetWidth：元素在水平方向上占用空间的大小，单位为px，包括元素的宽度（width+左右padding）+元素左右border宽度+垂直滚动条宽度\noffsetLeft：当前元素相左外边框距离包含元素（offsetParent）左内边框的距离（px）\noffsetTop：当前元素相上外边框距离包含元素（offsetParent）上内边框的距离（px）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("客户区（client）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("clientHeight：height+上下padding\nclientWidth：width+左右padding\n")])])])]),t._v(" "),a("li",[a("p",[t._v("滚动大小（scroll）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("scrollHeight：没有滚动条情况下，元素内容高度（标准盒下的height）\nscrollWidth：没有滚动条情况下，元素内容宽度（标准盒下的width）\nscrollLeft：被隐藏在内容区域左侧的像素数，该属性可改变滚动位置（元素必须具有滚动条，属性才有意义）\nscrollTop：被隐藏在内容区域上侧的像素数，该属性可改变滚动位置（元素必须具有滚动条，属性才有意义）\n")])])])]),t._v(" "),a("li",[a("p",[t._v("element.getBoundingClientRect()：返回一个对象，里面包含了元素相对于视口的位置")])])])])])]),t._v(" "),a("li",[a("p",[t._v("遍历")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOM2定义了两个用于辅助遍历的结构类型：NodeIterator和TreeWalker，这两个结构执行的都是基于"),a("strong",[t._v("深度优先")]),t._v("的遍历；")])]),t._v(" "),a("li",[a("p",[t._v("NodeIterator")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("document.createNodeIterator(rootNode,whatToShow,filter)\t//创建NodeIterator对象，里面保存着条件过滤下被返回的节点\n\trootNode：遍历子树的根节点\n\twhatToShow：确定遍历显示的节点，值为NodeFilter下的常量（如NodeFilter.SHOW_ALL会显示所有类型的节点，NodeFilter.SHOW_ELEMENT只显示元素节点等）\n\tfilter：值为一个对象或是一个函数。\n\t\t\t对象：{\n\t\t\t\t//该对象只有一个acceptNode函数用于设置节点过滤条件。如果允许节点被遍历，则返回值为NodeFilter.FILTER_ACCEPT，否则返回NodeFilter.FILTER_SKIP\n\t\t\t\tacceptNode:function(node){\t\n\t\t\t\t\t.....\n\t\t\t\t}\n\t\t\t}\n\t\t\t//原理和返回值同上\n\t\t\t函数：function(node){\n\t\t\t\t...\n\t\t\t}\n\t\t\t\nNodeIterator被创建之后，具有nextNode()和previousNode()两个方法可以用于改变对象内部指针指向的的节点。前者用于把指针前进一步，后者会使指针后退一步，每次调用方法都会返回指针指向的节点，如果遍历完成则返回null\n")])])])]),t._v(" "),a("li",[a("p",[t._v("TreeWalker")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("document.createTreeWalker(rootNode,whatToShow,filter)\t//创建TreeWalker对象，参数同上\n\n和NodeIterator类似，但相比更加灵活和高级，除了已有的方法，它提供了更多方向的遍历方法：\nparentNode()：把指针指向当前节点的父级节点\nfirstChild()：把指针指向当前节点的第一个子节点\nlastChild()：把指针指向当前节点的最后一个子节点\nnextSibling()：把指针指向当前节点的下一个同辈节点\npreviousSibling()：把指针指向当前节点的上一个同辈节点\n\nfilter函数中新增加一个返回值：NodeFilter.FILTER_REJECT，作用与FILTER_SKIP相同，都是跳过当前节点，但SKIP只会跳过当前子树节点然后前进到下一个节点，REJECT则会跳过整个子树\n\nTreeWalker还具有一个currentNode的属性，指向当前指针指向的节点\n")])])])])])])]),t._v(" "),a("h2",{attrs:{id:"js事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js事件"}},[t._v("#")]),t._v(" JS事件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("事件流")]),t._v(" "),a("p",[t._v("事件流描述了从页面中接收事件的顺序，JS的开发开发团队形成了两种意见："),a("strong",[t._v("事件冒泡")]),t._v("和"),a("strong",[t._v("事件捕获")]),t._v("；")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("事件冒泡")]),t._v(" "),a("p",[t._v("事件发生时由**最具体的元素（可以看作触发事件的元素）**接收，然后逐级向上传播；")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("father"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("son"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token style-attr language-css"}},[a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(" \n            \t "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("style")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('="')]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 200px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("border")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1px solid red"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \t\t\t50px")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n           \t Click me!\n        \t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n    \t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oF "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.father'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t\t\t\toS "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.son'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\toF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'father click!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t\t\toS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'son click!'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \t")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n//点击div.son，同时触发father和son点击事件，事件传播的顺序为：son =》 father =》 body =》 html =》 document，此为事件冒泡\n")])])])]),t._v(" "),a("li",[a("p",[t._v("事件捕获")]),t._v(" "),a("p",[t._v("事件捕获的传播顺序与冒泡完全相反；")])]),t._v(" "),a("li",[a("p",[t._v("DOM事件流")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOM2规定的"),a("strong",[t._v("事件流")]),t._v("包括三个阶段：事件捕获，目标执行，事件冒泡。实际上，上面的例子的实际执行顺序应该是：document =》 body =》 father =》 son =》son执行事件 =》 father =》 body =》 document。")]),t._v(" "),a("p",[t._v("因此在整个事件触发过程中，我们可以"),a("strong",[t._v("在捕获和冒泡两个阶段操作事件对象")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("事件本质就是"),a("strong",[t._v("用户或者浏览器自身执行的某种操作")]),t._v("，回调函数即为"),a("strong",[t._v("事件侦听器")])]),t._v(" "),a("p",[t._v("偶尔也会有这种形式的事件侦听器：")]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("form")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("action")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("ajax.html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("username"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("input")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("input"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click me"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("onclick")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("console.log(username.value)"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    /* 点击button时，控制台会显示username的value */\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("form")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("上述格式的函数会"),a("strong",[t._v("自动拓展作用域")]),t._v("，最大的作用就是"),a("strong",[t._v("能够直接获取同一form下的表单元素的属性")]),t._v("，原理就像这样：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("form"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("DOM0级事件")]),t._v(" "),a("p",[t._v("每个元素的onclick、onmousemove事件即为DOM0级事件；")])]),t._v(" "),a("li",[a("p",[t._v("DOM2级事件")]),t._v(" "),a("p",[t._v("标准浏览器：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("element.addEventListener/removeEventListener(eventName,function,bool):\n\teventName：事件名，如click、mousemove等，\n\tfunction：事件触发后的回调函数，\n\tbool：决定在哪个阶段调用回调函数，true在捕获阶段，false则在冒泡阶段\n")])])]),a("p",[t._v("IE浏览器（在新版本浏览器中不支持）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("element.attachEvent/deathEvent(eventName,function)\n\teventName：事件名，如onclick\n\tfunction：回调函数\n")])])])]),t._v(" "),a("li",[a("p",[t._v("事件对象event：")]),t._v(" "),a("p",[t._v("只要触发事件，回调函数中就会自动生成一个event事件对象，重要的属性和方法有：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("target：触发事件的元素节点\ntype：事件类型\neventPhase：当前事件所处阶段，1为捕获阶段，2为处理阶段，3为冒泡阶段\npreventDefault()：阻止默认事件\nstopPropagation():停止事件在DOM层次中的传播（直接断掉后续所有的传播）\n")])])]),a("p",[t._v("IE中的event对象是挂载在window对象下的一个属性")])]),t._v(" "),a("li",[a("p",[t._v("事件类型")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("UI事件：用户与界面上的元素交互时触发，多与window对象和表单控件有关，具体包括load（页面加载完成），abort（嵌入内容未加载完全时触发），select（文本框input或textarea中的字符被选中），resize（窗口或框架大小变化时在window上触发），scroll（元素滚动条被滚动时触发）")])]),t._v(" "),a("li",[a("p",[t._v("焦点事件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("blur：元素失去焦点，不冒泡\nfocus：元素获得焦点，不冒泡\n")])])])]),t._v(" "),a("li",[a("p",[t._v("鼠标事件：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("鼠标事件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("click：鼠标主键或回车触发\ndbclick：双击鼠标主键\ncontextmenu：单击鼠标右键，显示菜单\nmousedown/mouseup：鼠标任意键按下/抬起时触发\nmouseenter/mouseleave：鼠标移入元素，不冒泡（DOM3）\nmousemove：元素内移动鼠标\nmouseout/mouseover：鼠标移出/入元素\nmousewheel：鼠标滚轮事件\n")])])])]),t._v(" "),a("li",[a("p",[t._v("鼠标事件对象（"),a("strong",[t._v("MouseEvent")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("鼠标光标位置：\nevent.clientX/clientY：鼠标事件触发时，光标在客户区（即窗口，不包括工具栏）的坐标\n\t.pageX/pageY：鼠标事件触发时，光标在页面中的位置（页面未滚动时，值与clientX/Y相同）\n\t\t\tpageX = scrollLeft + clientX\n\t\t\tpageY = scrollTop + clientY\n\t.screenX/screenY：光标相对于整个屏幕的位置\n\n修改键：\nevent.ctrlKey（ctrl键）\n\t.shiftKey（shift键）\n\t.altKey（alt键）\n\t.metaKey(按住windows键触发事件)\n四者都是布尔值，按住键的情况下，触发事件则属性值为true，否则为fasle\n\n相关元素：\n当使用了mouseout/mouseover来触发元素移出/移入事件时，除了触发事件的元素，对于另一个被移入/移出的元素而言也是同样。\n因此event对象中有一个名为relatedTarget的属性指向这个相关对象\n\n鼠标按钮：\n鼠标事件对象中具有button属性，数值类型。0表示主鼠标按钮（左键），1表示中间鼠标的按钮（滚轮），2表示次鼠标按钮（右键）\n\n单击次数detail：\n鼠标事件对象具有detail属性，数值类型，表示鼠标在该位置单击了多少次。属性从1开始计数，一次完整的mounsedown/up会使detail加一。如果down之后移动了，则detail置零\n")])])]),a("ul",[a("li",[a("p",[t._v("滚轮事件对象（WheelEvent）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("wheelDelta：滚轮向上/向下滑动距离，向上值为正，向下为负\n")])])])])])])])]),t._v(" "),a("li",[a("p",[t._v("键盘与文本事件")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DOM0提供了三个事件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("keydown/keyup：任意键按下/抬起触发事件，前者按住不放会持续触发事件\nkeypress：字符键按下时触发事件，按住不放会持续触发事件\n\nDOM3新引入一个事件：\ntextInput：对keypress事件的补充，当用户在可编辑区域（input || textarea）中输入字符时会触发事件\n\n当同时定义所有事件时，按下字符键，首先触发keydown，然后顺序触发keypress和textInput，最后当抬起键时触发keyup，且前三者都是在文本框变化之前触发的；\n")])])])]),t._v(" "),a("li",[a("p",[t._v("键盘事件对象（KeyboardEvent）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("keyCode：键对应的数值，字符集遵循ASCII码\n\nDOM3增加了新的事件属性：\n\tkey，值为对应的键名，\n\tlocation：数值，表示按下了什么位置的键，0为默认键盘，1为左侧位置（左侧alt），2为右侧位置（右侧shift），4为移动设备键盘，5为手柄\n")])])])]),t._v(" "),a("li",[a("p",[t._v("文本事件对象（TextEvent）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("textInput事件触发后的事件对象。\n.data：输入的字符（非字符编码）\n.inputMethod：只有IE支持该属性，返回一个数值，表示文本输入到文本框中的方式\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("DOM变动事件")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("DOM2")]),t._v("新增加了变动事件，能在DOM的某一部分发生变化时给出提示。")])]),t._v(" "),a("li",[a("p",[t._v("插入节点（"),a("strong",[t._v("DOMNodeInserted")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("当使用appendChild、replaceChild、insertBefore和insertAdjacentHTML插入节点到DOM树时，就会触发DOMNodeInserted事件\n生成的事件对象中，target属性指向新插入的节点，relatedNode属性指向新插入节点的父级节点\n")])])])]),t._v(" "),a("li",[a("p",[t._v("删除节点（"),a("strong",[t._v("DOMNodeRemoved")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("当调用removeChild、replaceChild从DOM中删除节点时，就会触发该事件。\n生成的事件对象同上\n")])])])]),t._v(" "),a("li",[a("p",[t._v("DOM结构变化（"),a("strong",[t._v("DOMSubtreeModified")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("DOM结构中发生任何变化时都会触发该事件。这个事件的优先级最低。\n生成的事件对象同上\n")])])])]),t._v(" "),a("li",[a("p",[t._v("DOM结构特性变化（"),a("strong",[t._v("DOMAttrModified")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("当特性（attribute）改变时触发事件。\n生成的事件对象同上\n")])])])]),t._v(" "),a("li",[a("p",[t._v("文本节点值变化（"),a("strong",[t._v("DOMCharacterDataModified")]),t._v("）：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("当文本节点值变化时触发事件。\n生成的事件对象同上\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("HTML5事件")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("contextmenu：鼠标右键菜单事件\nbeforeunload：页面卸载前触发时间。event.returnValue的值要设置为显示的字符串，并在回调函数中return要显示的字符串\nDOMContentLoaded：页面中的内容都加载完毕之后触发事件\nreadystatechange（IE）：提供与文档或元素的加载状态有关的信息\nhashchange：URL的参数列表（#之后的字符串）变化时触发事件\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("性能与内存")]),t._v(" "),a("p",[t._v("为了提升性能，当需要给列表元素中的多个元素赋予同一事件时，可以直接把事件委托给列表元素；")]),t._v(" "),a("p",[t._v("当带有事件的元素被删去时，这个事件就会成为"),a("strong",[t._v("空元素事件")]),t._v("，因此会造成页面性能下降；")]),t._v(" "),a("p",[t._v("对某些浏览器而言，刷新页面之后先前的事件链接还是会存在，因此要在beforeunload事件中取消所有的事件.")])]),t._v(" "),a("li",[a("p",[t._v("模拟事件（DOM2、3）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" someNodeObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//用于事件触发的元素对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" event "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("eventString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//根据eventString创建事件对象，可选的string有MouseEvent(鼠标事件)，UIEvent(ui事件)，MutationEvent(DOM变动事件)，HTMLEvent(一般的html事件)，KeyBoardEvent（键盘事件），CustomEvent（自定义事件）")]),t._v("\nevent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("eventString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//初始化事件参数，如event.initMouseEvent(args)")]),t._v("\nsomeNodeObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatchEvent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//触发事件")]),t._v("\n")])])])])])])])])])])}),[],!1,null,null,null);s.default=n.exports}}]);