(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{217:function(t,s,n){"use strict";n.r(s);var a=n(0),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"mockjs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mockjs"}},[t._v("#")]),t._v(" MockJs")]),t._v(" "),n("p",[t._v("拦截Ajax请求，并返回模拟数据的工具，通常作为前端测试的手段")]),t._v(" "),n("h4",{attrs:{id:"mock-mock-url-type-function-options-template"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mock-mock-url-type-function-options-template"}},[t._v("#")]),t._v(" Mock.mock(url ?,type ?,function(options)|template):")]),t._v(" "),n("p",[t._v("​\turl：要拦截的url或url正则；")]),t._v(" "),n("p",[t._v("​\ttype：要拦截的Ajax请求类型，如PUT、POST、GET、DELETE等；")]),t._v(" "),n("p",[t._v("​\ttemplate：返回的数据模板，可以是对象或字符串；")]),t._v(" "),n("p",[t._v("​\toptions：表示用于生成响应数据的函数；")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Mock "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'mockjs'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mock")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 属性 list 的值是一个数组，其中含有 1 到 10 个元素，随机生成1-10不等")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'list|1-10':[{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t'id|+1':1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }]")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性list是由三个元素组成，且一个元素范围在1-10以内，小数点后1-3位不等的随机数组")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'list|3':[{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t'val|1-10.1-3':1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }]")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回StrStrStr")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'str|3':'Str' ,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//随即返回1-3个Str字符串")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'str|1-3':'Str'")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\ttrue，false出现几率各为一半")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'name|1':false")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//\t1/(1+3)概率为true")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'name|1-3':true")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从指定对象里抽取2-3个的属性")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'objectDemo|2-3':{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \tname:'liao',")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \tage:18,")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \tsex:'man',")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \thobby:'game'")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//顺序循环id后的数组，每次选取一次元素，且每次选取一个元素作为最终值")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'name|1-5':[{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \t'id|+1':[1,2,3]\t")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }]")]),t._v("\n \n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性值为函数")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'name':function (argument) {")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \tconsole.log('console test');")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// \treturn 'return test';")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }\t")]),t._v("\n\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//属性值为正则表达式，反向生成匹配规则的字符串")]),t._v("\n \t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'regexp1':/^a\\d{3,5}/")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h4",{attrs:{id:"mock-setup-settings-："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mock-setup-settings-："}},[t._v("#")]),t._v(" Mock.setup(settings)：")]),t._v(" "),n("p",[t._v("配置拦截 Ajax 请求时的行为。支持的配置项有："),n("code",[t._v("timeout")]),t._v("。例：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Mock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    timeout"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("400")]),t._v("\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指定被拦截的Ajax请求的响应时间")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("下一阶段的问题是Mockjs的启动问题")])])}),[],!1,null,null,null);s.default=e.exports}}]);